<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8' />
    <title>Ann Arbor Maps</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.1/mapbox-gl.js'></script>
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.1/mapbox-gl.css' rel='stylesheet' />
    <style>
        body { margin:0; padding:0; }
        #map { position:absolute; top:0; bottom:0; width:100%; }
    </style>
</head>
<body>
<style>
    #menu {
        background: #fff;
        position: absolute;
        z-index: 1;
        top: 10px;
        right: 10px;
        border-radius: 3px;
        width: 120px;
        border: 1px solid rgba(0,0,0,0.4);
        font-family: 'Open Sans', sans-serif;
    }
    
    #menu a {
        font-size: 13px;
        color: #404040;
        display: block;
        margin: 0;
        padding: 0;
        padding: 10px;
        text-decoration: none;
        border-bottom: 1px solid rgba(0,0,0,0.25);
        text-align: center;
    }
    
    #menu a:last-child {
        
    }
    
    #menu a:hover {
        background-color: #f8f8f8;
        color: #404040;
    }
    
    #menu a.active {
        background-color: #3887be;
        color: #ffffff;
    }
    
    #menu a.active:hover {
        background: #3074a4;
    }
</style>
 
<nav id="menu"></nav>
<div id='map'></div>
<script>

mapboxgl.accessToken = 'pk.eyJ1Ijoic2VyZXllZSIsImEiOiJjanVsemdjcGUyYzN1NDNwZzdxajN0MnJxIn0.Nz3Q8Z_TinbG5oAPP7sZaQ';
var map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/mapbox/light-v10',
    center: [-83.7430, 42.2808],
    zoom: 11.5
});

map.on('load', function () {
    map.addSource('yelp-data',
    {
        type: 'geojson',
        data: {
            "type": "FeatureCollection",
            "features": {{ yelp_data|tojson|safe }}
        }
    });
    map.addSource('dpss-data',
    {
        type: 'geojson',
        data: {
            "type": "FeatureCollection",
            "features": {{ dpss_data|tojson|safe }}
        }
    });
    map.addSource('mprint-data',
    {
        type: 'geojson',
        data: {
            "type": "FeatureCollection",
            "features": {{ mprint_data|tojson|safe }}
        }
    });
    map.addLayer({
        'id': 'yelp-points',
        'type': 'circle',
        'source': 'yelp-data',
        'paint': {
        // make circles larger as the user zooms from z12 to z22
            'circle-radius': {
            'base': 1.75,
            'stops': [[12, 2], [22, 180]]
            },
            // color circles by ethnicity, using a match expression
            // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match
            'circle-color': [
                'match',
                ['get', 'rating'],
                0, '#0c0887', // blue
                1, '#0c0887', // blue
                2, '#0c0887', // blue
                3, '#4b03a1', // purple-blue
                4, '#7d03a8', // purple
                5, '#a82296', // purple
                6, '#cb4679', // magenta
                7, '#e56b5d', // red
                8, '#f89441', // orange
                9, '#fdc328', // orange
                10, '#f0f921', // yellow
		        /* other */ '#0c0887' // blue
            ]
        }
    });
    map.addLayer({
        "id": "yelp-labels",
        "type": "symbol",
        "source": "yelp-data",
        "layout": {
            "text-field": "{title}",
            "text-font": ["Open Sans Semibold", "Arial Unicode MS Bold"],
            "text-offset": [0, 0.6],
            "text-anchor": "top"
        }
    });
    map.addLayer({
        'id': 'dpss-points',
        'type': 'circle',
        'source': 'dpss-data',
        'paint': {
        // make circles larger as the user zooms from z12 to z22
            'circle-radius': {
            'base': 1.75,
            'stops': [[12, 2], [22, 180]]
            },
            // color circles by ethnicity, using a match expression
            // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match
            'circle-color': "#00ffff"
        }
    });
    map.addLayer({
        "id": "dpss-labels",
        "type": "symbol",
        "source": "dpss-data",
        "layout": {
            "text-field": "{description}",
            "text-font": ["Arial Unicode MS Bold"],
            "text-offset": [0, 0.6],
            "text-anchor": "top"
        }
    });
    map.addLayer({
        'id': 'mprint-points',
        'type': 'circle',
        'source': 'mprint-data',
        'paint': {
        // make circles larger as the user zooms from z12 to z22
            'circle-radius': {
            'base': 1.75,
            'stops': [[12, 2], [22, 180]]
            },
            // color circles by ethnicity, using a match expression
            // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match
            'circle-color': {
                property: 'printers',
                stops: [
                [0, '#f1f075'],
                [110, '#e55e5e']
                ]
            }
        }
    });
    map.addLayer({
        "id": "mprint-labels",
        "type": "symbol",
        "source": "mprint-data",
        "layout": {
            "text-field": "{name}",
            "text-font": ["Arial Unicode MS Bold"],
            "text-offset": [0, 0.6],
            "text-anchor": "top"
        }
    });
});

var toggleableLayerIds = [ 'yelp', 'dpss', 'mprint'];
var yelpLayers =['yelp-points', 'yelp-labels'];
var dpssLayers = ['dpss-points', 'dpss-labels'];
var mprintLayers = ['mprint-points', 'mprint-labels'];

for (var i = 0; i < toggleableLayerIds.length; i++) {
var id = toggleableLayerIds[i];
 
var link = document.createElement('a');
link.href = '#';
link.className = 'active';
link.textContent = id;
 
link.onclick = function (e) {
    var clickedLayer = this.textContent;
    e.preventDefault();
    e.stopPropagation();
    
    if (clickedLayer == 'yelp') {
        for (var j = 0; j < yelpLayers.length; j++) {
            var layer = yelpLayers[j];
            var visibility = map.getLayoutProperty(layer, 'visibility');
                        
            if (visibility === 'visible') {
            map.setLayoutProperty(layer, 'visibility', 'none');
            this.className = '';
            } else {
            this.className = 'active';
            map.setLayoutProperty(layer, 'visibility', 'visible');
            }
        }
    } else if (clickedLayer == 'dpss') {
        for (var j = 0; j < dpssLayers.length; j++)  {
            var layer = dpssLayers[j];
            var visibility = map.getLayoutProperty(layer, 'visibility');
                        
            if (visibility === 'visible') {
            map.setLayoutProperty(layer, 'visibility', 'none');
            this.className = '';
            } else {
            this.className = 'active';
            map.setLayoutProperty(layer, 'visibility', 'visible');
            }
        }
    } else if (clickedLayer == 'mprint') {
        for (var j = 0; j < mprintLayers.length; j++)  {
            var layer = mprintLayers[j];
            var visibility = map.getLayoutProperty(layer, 'visibility');
                        
            if (visibility === 'visible') {
            map.setLayoutProperty(layer, 'visibility', 'none');
            this.className = '';
            } else {
            this.className = 'active';
            map.setLayoutProperty(layer, 'visibility', 'visible');
            }
        }
    }
};
 
var layers = document.getElementById('menu');
layers.appendChild(link);
}
</script>

</body>
</html>
